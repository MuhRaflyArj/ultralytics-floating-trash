# Ultralytics ðŸš€ AGPL-3.0 License - https://ultralytics.com/license

# YOLOv11 object detection model with P3/8 - P5/32 outputs - LCBHAM Integrated
# Model docs: https://docs.ultralytics.com/models/yolo11
# Task docs: https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolo11n-lcbham.yaml' will call yolo11-lcbham.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024] # summary: # layers, # parameters, # gradients, # GFLOPs (Update after running)
  s: [0.50, 0.50, 1024]
  m: [0.50, 1.00, 512]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.50, 512]

# YOLOv11n backbone (Unchanged)
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  - [-1, 2, C3k2, [256, False, 0.25]] # 2
  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8
  - [-1, 2, C3k2, [512, False, 0.25]] # 4 (Backbone P3 output for head)
  - [-1, 1, Conv, [512, 3, 2]] # 5-P4/16
  - [-1, 2, C3k2, [512, True]] # 6 (Backbone P4 output for head)
  - [-1, 1, Conv, [1024, 3, 2]] # 7-P5/32
  - [-1, 2, C3k2, [1024, True]] # 8
  - [-1, 1, SPPF, [1024, 5]] # 9
  - [-1, 2, C2PSA, [1024]] # 10 (Backbone P5 output for head)

# YOLOv11n head with LCBHAM replacing downsampling Conv
head:
  # Top-down path
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 11 - Upsample P5 feature (from layer 10)
  - [[-1, 6], 1, Concat, [1]] # 12 - cat backbone P4 (layer 6)
  - [-1, 2, C3k2, [512, False]] # 13 - Process P4 features

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 14 - Upsample P4 feature (from layer 13)
  - [[-1, 4], 1, Concat, [1]] # 15 - cat backbone P3 (layer 4)
  - [-1, 2, C3k2, [256, False]] # 16 (P3/8-small output)

  # Bottom-up path with LCBHAM
  - [-1, 1, LCBHAM, [256, 3, 2]] # 17 - LCBHAM downsampling from P3 head output (layer 16)
  - [[-1, 13], 1, Concat, [1]] # 18 - cat head P4 (layer 13)
  - [-1, 2, C3k2, [512, False]] # 19 (P4/16-medium output)

  - [-1, 1, Conv, [512, 3, 2]] # 20 - LCBHAM downsampling from P4 head output (layer 19)
  - [[-1, 10], 1, Concat, [1]] # 21 - cat head P5 (layer 10)
  - [-1, 2, C3k2, [1024, True]] # 22 (P5/32-large output)

  # Detection Layer
  - [[16, 19, 22], 1, Detect, [nc]] # Detect(P3, P4, P5)